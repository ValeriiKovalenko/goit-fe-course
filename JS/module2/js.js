'use strict'


// 1) Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Объедините их вместе.
// const a = ['a', 'b', 'c'];
// const b = [1, 2, 3];
// let c = a.concat(b);
// console.log(c)

// 2) Дан массив ['a', 'b', 'c']. Добавьте ему в конец элементы 1, 2, 3.
// const a = ['a', 'b', 'c'];
// a.push(1,2,3)
// console.log(a)
// 3) Даны два массива: [1, 2, 3] и [4, 5, 6]. Объедините их вместе.
// const a = [1, 2, 3];
// const b = [4, 5, 6]
// 4) Дан массив [1, 2, 3]. Сделайте из него массив [3, 2, 1].
// const a = [1, 2, 3];
// a.reverse()
// console.log(a)
// 5) Дан массив [1, 2, 3]. Добавьте ему в конец элементы 4, 5, 6.
//  the same as 2
// 6) Дан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6.
// const a = [1, 2, 3];
// a.unshift(4, 5, 6)
// console.log(a)
// 7)  Дан массив ['js', 'css', 'jq']. Выведите на экран первый элемент.
// const a = ['js', 'css', 'jq'];
// console.log(a[0])
// :sunglasses: Дан массив ['js', 'css', 'jq']. Выведите на экран последний элемент.
// const a = ['js', 'css', 'jq'];
// console.log( a[a.length-1])
// 9) Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [1, 2, 3].
// const a = [1, 2, 3, 4, 5];
// console.log(a.slice(0, 3))

// 10) Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [4, 5]. Скрыть решение.
// const a = [1, 2, 3, 4, 5];
// console.log(a.slice(3))
// 11) Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте массив в [1, 4, 5].
// const a = [1, 2, 3, 4, 5];
// let newA = a.splice(1,2);
// console.log(a)
// 12)  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в новый массив элементы [2, 3, 4]. Показать решение.
// const a = [1, 2, 3, 4, 5];
// let b = a.splice(1,3);
// console.log(b)
// 13) Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5]. Показать решение.
// const a = [1, 2, 3, 4, 5];
// a.splice(3,0, 'a', 'b', 'c')
// console.log(a)
// 14) Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e']. Показать решение. (edited)
// const a = [1, 2, 3, 4, 5];
// a.splice(1,0, 'a', 'b');
// console.log(a)
// const b = a;
// console.log(b)
// b.splice(6,0, 'c');
// console.log(b)
// const c = b;
// c.splice(9,0, 'e')
// console.log(c)





// // 1) Вибираємо випадкове число (від 0 до довжини масива);
// const a = [1, 2, 3, 4, 5];
// const b = Math.floor(Math.random()*a.length);
// console.log(a[b])
// // 2) Записати в змінну звернення типу масив[індекс];

// // 3) Вивести змінну з пунтку 2 в алерт;
// let index = Math.floor(Math.random()*animals.length);
// alert(animals[index]);
// 1) Через prompt вводимо свій варіант тваринки
// 2) Варіант компютера записати в змінну
// 3) Порівнюємо наш варіант з копютерним
// 3,1) Якщо варіанти співпали тоді виводимо алертом що юзер виграва.
// 3,2) Якщо варіанти не співпали кажемо що користувач програв і виводимо варіант компютера.
// Написати гру Камінь Ножиці Папір.
// Варіанти вибору потрібно зберігати в масиві
// Користувач вводить свій варіант
// Компютер вибирає свій рандомний варівант з масиву
// Первіряємо вибір користувача і вибір компютера. 
// Опрацювати всі варіанти:
// 1) Варіанти де виграє користувач
// 2) Варіанти де виграє компютер
// 3) Варіанти де виходить нічия.


// const a = [1, 2, 3, 4, 5];
// const b = Math.floor(Math.random()*a.length);
// alert(a[b])


// const animals = prompt('enter your animal');
// const check = ['cat', 'dog', 'snake', 'bird'];
// let rand = Math.floor(Math.random()*check.length)
// console.log(check[rand]);
// if(animals === check[rand]){ alert('goood!')
// }
// else {alert('baaad')};


//камень ножници!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// const login = prompt('Your turn');
// const turn = ['камень', 'ножницы', 'бумага'];
// let rand = Math.floor(Math.random()*turn.length)
// console.log(turn[rand]);
// let random = turn[rand];
// if (login === 'камень' && random === 'камень') {
//     alert('dead heat')
// } else if(login === 'камень' && random === 'ножницы') {alert('win')

// } else if(login === 'камень' && random === 'бумага') {alert('game over')
// } else if(login === 'ножницы' && random === 'ножницы'){alert('dead heat')

// } else if(login === 'ножницы' && random === 'бумага'){alert('win')

// } else if(login === 'ножницы' && random === 'камень'){alert('game over')

// } else if(login === 'бумага' && random === 'камень'){alert('win')

// } else if(login === 'бумага' && random === 'ножницы'){alert('game over')

// } else if(login === 'бумага' && random === 'бумага'){alert('dead heat')

// }





// 1) Записуємо в змінну строку з промта
// 2) Зробити строку масивом
// 3) Скопіювати масив
// 4) Реверсимо масив
// 5) З масивів робимо строки
// 6) Порівнюємо дві строки і виводимо результат в консоль; 


// const login = prompt('Your turn');
// let a = login.split('');
// console.log(a);
// let b = a.slice();
// b.reverse();

// let c = b.join('');
// console.log(c.repeat(3));



// let logins = ['rew', 'qwewwe', 'apple', 'js', 'row', 'col']

// // 1) Запитати логін
// // 2) Перевірити чи існує логін в базі
// // 3) Якщо логін існує вивести алерт ("Такий логін вже існує")
// // 4) Якщо логін не існує вивести алерт ("Вітаємо") 
// // Collapse

// let login = prompt('your login');
// if(logins.includes(login)){
// alert('already')
// }



// const iterable = 'javascript';

// for (const value of iterable) {
//   console.log(value);
// }

//  [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[WHILE]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
// let a = 1;
// while(a <=10) {
//   console.log(a);
//   a ++;
// }


// [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[DO WHILE]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
// let num;
// do{
// let num = Number(prompt("enter #"))
// }while(num < 5)

// [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[FOR]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
 



// //================ task 1 ===============


// /*
//  * Есть массив имен пользователей
//  * Используя методы массива, последовательно выполнить указанные операции
//  */

// let users = ["Mango", "Poly", "Ajax", "Chelsey"];

// // // Удалить первый элемент массива
// console.log(users.shift());
// console.log(users)
// // // Удалить последний элемент массива
// // console.log(users); // ["Poly", "Ajax"]
// users.pop()
// console.log(users)
// // // Добавить в начало массива пользователя "Lux"
// // console.log(users); // ["Lux", "Poly", "Ajax"]
// users.unshift('Lux')
// console.log(users)
// // // Добавить в конец массива два пользователя ("Jay" и "Kiwi") за одну операцию
// // console.log(users); //  ["Lux", "Poly", "Ajax", "Jay", "Kiwi"]
// users.push('Jay', 'Kowi')
// console.log(users)
// // // Удалить из массива элемент хранящийся в переменной userToDelete
// const userToDelete = "Ajax";
// users.splice(users.indexOf(userToDelete), 1)
// console.log(users)

// console.log(users); //  ["Lux", "Poly", "Jay", "Kiwi"]

// // Добавить в массив пользователя "Kong", перед пользователем хранящейся в переменной userToInsertBefore
// const userToInsertBefore = "Jay";
// console.log(users); //  ["Lux", "Poly", "Kong", "Jay", "Kiwi"]

// //=============================task 2=======

// //Задание 1 Вывести числа от 4 до 400 на экран.
// let a = 3;
// while(a <= 400) {
//   a ++
//   console.log(a)
// }

// //=============================task 3 ===============

// //Задание 2 Вывести числа в последовательности: 4 7 10 13 с помощью цикла.
// let a = 4;
// while(a < 13) {
//   a = a + 3
//   console.log(a)
 
// }
// //=============================task 4 ===============

// //Задание 3 Вывести числа 654 653 652 до нуля.
// let a = 655;
// while(a > 0){ a = a -1
//  console.log(a)
// }  

// //=============================task 5 ===============

// //Задание 4 Вывести все годы с 1983 до 2017.

// let a = 2017;
// for(let b = 1983; b <= a; b++) {
//   console.log(b)
// }

// //============================== task 6 ===============

// //Задание 8 Дано число n=1000. Делите его на 2 столько раз, пока результат деления не станет меньше 50. Какое число получится? Посчитайте количество итераций, необходимых для этого (итерация - это проход цикла), и запишите его в переменную num
// let a = 1000;
// let number = 0;
// while(a > 50) { a = a / 2
//   number ++
//   console.log(a)
//   console.log(number)

// }
// //============================== task 7 =================================

// // Дан массив с элементами 2, 5, 9, 15, 0, 4. С помощью цикла for и оператора if выведите на экран столбец тех элементов массива, которые больше 3-х, но меньше 10.
// let a = [2, 5, 9, 15, 0, 4];

// for(let i = 0; i < a.length; i+=1) 
// {
// if (a[i] > 3 && a[i] < 10) console.log(a[i])}

// //==============================task 8 =================================

// // Дан массив с числами. Числа могут быть положительными и отрицательными. Найдите сумму положительных элементов массива.
// let sum = 0;
// let mass = [-1, -2, 2, 2, 6, 10];
//  for(let i = 0; i < mass.length; i += 1) {if (mass[i] >= 0) 
// {sum = sum + mass[i]}
// }
// console.log(sum)
// //=========================== tasks 9 =======================

// // Дан массив с элементами 1, 2, 5, 9, 4, 13, 4, 10. С помощью цикла for и оператора if проверьте есть ли в массиве элемент со значением, равным 4. Если есть - выведите на экран 'Есть!' и выйдите из цикла. Если нет - ничего делать не надо.
// let mass = [1, 2, 5, 9, 4, 13, 4, 10]
// for(let i = 0; i < mass.length; i += 1) {
//   if(mass[i] === 4){
//     alert('OK')
//     break;
//   }
// }
// //============================ task 10 =====================

// // Дан массив числами, например: ['10', '20', '30', '50', '235', '3000']. Выведите на экран только те числа из массива, которые начинаются на цифру 1, 2 или 5. 
// let mass = ['10', '20', '30', '50', '235', '3000'];
// for(let i = 0; i < mass.length; i += 1) {
//   if(mass[i][0] === '1' || mass[i][0] === '2' || mass[i][0] === '5') {console.log(mass[i])}
// }
// //=========================== task 11 =========================

// /*
// * Есть массив имен пользователей users
// *
// * Напиши цикл, который для каждого пользователя будет выводить в консоль
// * сообщение в формате [номер элемента] - [значение элемента]. 
// * 
// * Нумерация должна начинаться с 1. К примеру для первого элемента массива
// * с индексом 0 будет выведено '1 - Mango', а для индекса 2 выведет '3 - Ajax'
// *
// * Цикл должен выводить сообщения до тех пор, пока не закончатся элементы массива
// */

// let users = ["Mango", "Poly", "Ajax", "Lux", "Jay", "Kong"];
// let i = 0;
// for(let key of users) {
//   if(key.length > 0){i += 1;}
//   console.log(i, key)
// }

// //========================== task 12 =========================

// /*
// * Напиши скрипт по автоматизации оплаты процесса гравировки украшений.
// * Гравировка одного слова стоит 10 кредитов.
// */

// // В переменной message хранится произвольная строка

// // Разбить строку в массив, разделитель - пробел, и записать в переменную words
// console.log(words);

// // Выведи в консоли длину массива words
// console.log(); // 8

// // Используя цикл вычисли сколько будет стоить гравировка и запиши результат в переменную price
// console.log(price); // 80
// let price = 0;
// const message = "Proin sociis natoque et magnis parturient montes mus";
// let words = message.split(" ");
// console.log(words)
// console.log(words.length)
// for(let i = 0; i < words.length; i += 1)  {
//   price += 10
// }

// console.log(price)

// //============================= task 13 ============================

// /*
//   Напиши цикл, который просит, через prompt, ввести число больше 100. 
  
//   Если посетитель нажал Cancel - завершить цикл.
  
//   Если посетитель ввёл другое число – попросить ввести ещё раз, 
//   и так далее, пока не введет число больше 100.
  
//   Предполагается, что посетитель вводит только числа, 
//   обрабатывать невалидный ввод вроде строк 'qwerty' не нужно.
  
//   PS: используй бесконечный цикл с прерыванием
// */

// let input;
// do {
//   input = Number(prompt("введи число больше сотки"))
  
//   if(input < 100 && input !== 0) {
//      alert('попросить ввести ещё раз')
//     } 
// }
// while(input <= 100 && input !== 0) 
// //============================= task 14 ===============================


//  /*
//   Напиши скрипт, который выбирает из массива numbers 
//   все числа, которые больше чем значение переменной num, 
//   записывая эти числа в массив matched.
      
//   В результате в массиве matched будут все подходяшие числа.
      
//   PS: используй цикл for или for...of и оператор ветвления if
// */

// const numbers = [1, 3, 17, 5, 9, 14, 8, 14, 34, 18, 26];
// const num = 10;
// const matched = [];

// for( let key of numbers) {
//   if(key > 10){
//     matched.push(key)
//   }
// }
// console.log(matched)

// console.log(matched); // [17, 14, 14, 32, 18, 26]


// //==================== task 15 ===============================================

// /*
//   Напиши скрипт, который проверяет произвольную строку 
//   в переменной message и находит в ней самое длинное слово,
//   записывая его в переменную longestWord.
// */

// const message = "May the force be with you";
// let m2 = message.split(" ")
// let longestWord = 0;
// let word;
// console.log(m2)
// for( let i = 0; i < m2.length; i += 1){
//   if(m2[i].length > longestWord){
//     longestWord = m2[i].length
//     word = m2[i]
//   }

// }
// console.log(longestWord)
// console.log(word)



// //================== task 16 ===============================================


// /*
//   Создай игру угадай число.
  
//   Есть массив чисел numbers, содержащий "верные" числа.
//   Числа в массиве всегда идут по возрастанию, 1-5, 20-40, 2-100 и т.п.
  
//   Просим пользователя ввести цифру от самого маленького,
//   до самого большого элемента массива. Эти значения необходимо
//   сохранить в переменные min и max. Учтите что массив произвольный,
//   но элементы всегда идут по возрастанию.
  
//   Пусть prompt говорит "Введите цифру между x и y", где x и y 
//   соотвественно самый маленький и самый большой элемент массива.
  
//   Предполагаем что пользователь вводит только числа, проверки на невалидный ввод не делать. 
//   Проверить содержит ли в себе массив numbers введенное число.
  
//     - Если содержит - выводим alert с сообщением 'Поздравляем, Вы угадали!'.
//     - Есл не содержит - выводим alert с сообщением 'Сожалеем, Вы не угадали!'.
// */

// const numbers = [12, 15, 25, 37, 41, 62, 74, 83];
// let min = 0;
// let max = 83;
// let input;
// do{
//   let input = +prompt('vvesti chislo')
//   if(input === 0){break;}
// else if(numbers.includes(input)){ alert('succes')}
// else {alert('try again')}

// }
// while(  input !==0 );



// //============================= task 17 ===================================

// /*
//   Напиши скрипт который:
  
//   - Запрашивает по очереди числа при помощи prompt и сохраняет их в массиве.
//     Используйте do...while.
//   - Проверять что пользователь ввел не число не обязательно
//   - Заканчивает запрашивать числа как только пользователь нажмёт Cancel.
//   - После того как ввод был завершен, если массив не пустой, 
//     скрипт выводит сумму всех значений массива: "Сумма: <сумма всех значений в массиве>"
//     Используйте цикл for...of
// */


// //============================= ***ЗАДАНИЕ ПОВЫШЕННОЙ СЛОЖНОСТИ*** =============================

// /*
  
  
//   Создайте игру угадай число.
  
//   Есть массив чисел numbers, содержащий "верные" числа.
//   Числа в массиве всегда идут по возрастанию, 1-5, 20-40, 2-100 и т.п.
  
//   Просим пользователя ввести цифру от самого маленького,
//   до самого большого элемента массива. Эти значения необходимо
//   сохранить в переменные min и max. Учтите что массив произвольный,
//   но элементы всегда идут по возрастанию.
  
//   Пусть prompt говорит "Введите цифру между x и y", где x и y 
//   соотвественно самый маленький и самый большой элемент массива.
  
//   Но пользователь может ввести что угодно, необходимо проверить 
//   что было введено. Преобразовать input в числовой тип и проверить 
//   число ли это.
  
//     - Если не число - выводим alert с сообщением о том, что было 
//       введено не число.
//     - Если число - проверить содержит ли в себе массив numbers это число.
//     - Если содержит - выводим alert с сообщением 'Поздравляем, Вы угадали!'.
//     - Есл не содержит - выводим alert с сообщением 'Сожалеем, Вы не угадали!'.
// */

// const numbers = [12, 15, 25, 37, 41];


// //========================== ***ЗАДАНИЕ ПОВЫШЕННОЙ СЛОЖНОСТИ*** =====================

// /*
//   Написать следующий скрипт:
  
//     - При загрузке страницы пользователю предлагается ввести через prompt число. 
//       Число введенное пользователем записывается в массив чисел.
      
//     - Операция ввода числа пользователем и сохранение в массив продолжается до
//       тех пор, пока пользователь не нажмет Cancel в prompt. Используйте цикл do...while.
      
//     - После того как пользователь прекратил ввод нажав Cancel, необходимо взять 
//       массив введенных чисел, сложить общую сумму всех элементов массива и 
//       записать ее в переменную. Используйте цикл for или for...of.
      
//     - По окончанию ввода, если массив не пустой, вывести alert с текстом `Общая сумма чисел равна ${сумма}`
      
//   🔔 PS: Делать проверку того, что пользователь ввел именно число, а не произвольный набор 
//       символов, не обязательно. Если хотите, в случае некорректного ввода покажите alert с текстом 
//       'Было введено не число, попробуйте еще раз', при этом результат prompt записывать 
//       в массив чисел не нужно, после чего снова пользователю предлагается ввести число в prompt.
// */

// let userInput;
// const numbers = [];
// let total = 0;


// //========================== ***ЗАДАНИЕ ПОВЫШЕННОЙ СЛОЖНОСТИ*** =====================

// /*
  
//   Напишите скрипт имитирующий авторизацию пользователя.
  
//   Есть массив паролей зарегистрированных пользователей passwords. 
  
//   При посещении страницы, необходимо попросить пользователя ввести свой пароль,
//   после чего проверить содержит ли массив passwords пароль введенный пользователем.
  
//   Пароль можно ввести не верно всего n раз, кол-во хранится в переменной attempts.
//   Подсказка: используйте цикл do...while.
//   Если был введен пароль который есть в массиве passwords, вывести alert 
//   с текстом 'Добро пожаловать!' и прекратить спрашивать пароль в цикле.
//   Если был введен не существующий пароль, отнять от лимита попыток единицу, 
//   вывести alert с текстом "Неверный пароль, у вас осталось n попыток", 
//   где n это оставшийся лимит. 
  
//   После того как пользователь закрыл alert, запросить пароль снова. 
//   Продолжать запрашивать пароль до тех пор, пока пользователь не введет 
//   существующий пароль, не кончатся попытки или пока пользователь 
//   не нажмет Cancel в prompt.
//   Если закончились попытки, вывести alert с текстом "У вас закончились попытки, аккаунт заблокирован!"
  
//   Если пользователь нажмет Cancel, прекратить выполнение цикла.
// */

// const passwords = ['qwerty', '111qwe', '123123', 'r4nd0mp4zzw0rd'];
// let attempts = 3;